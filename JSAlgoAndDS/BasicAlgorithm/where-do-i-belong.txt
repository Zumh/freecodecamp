/*
Basic Algorithm Scripting: Where do I Belong
Return the lowest index at which a value (second argument) should be inserted into an array (first argument) once it has been sorted. The returned value should be a number.

For example, getIndexToIns([1,2,3,4], 1.5) should return 1 because it is greater than 1 (index 0), but less than 2 (index 1).

Likewise, getIndexToIns([20,3,5], 19) should return 2 because once the array has been sorted it will look like [3,5,20] and 19 is less than 20 (index 2) and greater than 5 (index 1).

We used binary search on this solution
*/

function getIndexToIns(arr, num) {
  var mid = 0;
  var result = 0;
  var left = 0;
  var right = arr.length-1;
  arr = arr.sort(function(a, b){return a-b});
  num = Math.ceil(num);
  
  while (left <= right) {
    mid  = Math.floor((left + right) / 2);
   
    // if found then end the loop
    if (arr[mid] == num){
      result = mid;
      left = right+1;

    } else if (arr[mid] > num && arr[mid - 1] < num) {
      // search in between the large number and smaller number
        result = mid; 
        left = right+1;
    } else if (arr[mid] < num && arr.length - 1 == mid) {
      // search the end of the number length
        result = mid + 1; 
        left = right+1;
    } else if (arr[mid] > num ) { 
      // if the target is bigger move right index to left or lower value
        right = mid - 1;

    } else {
      // if the target is smaller move the left to right or bigger number
      left = mid + 1;

    }
    
  }
  console.log(result)
  return(result);
}
getIndexToIns([10, 20, 30, 40, 50], 30)
getIndexToIns([5, 3, 20, 3], 5)
getIndexToIns([20,3,5], 19)
getIndexToIns([2, 5, 10], 15) ;
getIndexToIns([3, 10, 5], 3);
getIndexToIns([10, 20, 30, 40, 50], 35);
getIndexToIns([40, 60], 50);
