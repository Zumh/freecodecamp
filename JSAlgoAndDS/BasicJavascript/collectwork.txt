// Setup
var myArray = [50,60,70];

// Only change code below this line
var myData = myArray[0];// Setup
var myArray = [[1,2,3], [4,5,6], [7,8,9], [[10,11,12], 13, 14]];

// Only change code below this line
var myData = myArray[2][1];
// Setup
var myPlants = [
  {
    type: "flowers",
    list: [
      "rose",
      "tulip",
      "dandelion"
    ]
  },
  {
    type: "trees",
    list: [
      "fir",
      "pine",
      "birch"
    ]
  }
];

// Only change code below this line

var secondTree = myPlants[1].list[1]; // Change this line
// Setup
var myStorage = {
  "car": {
    "inside": {
      "glove box": "maps",
      "passenger seat": "crumbs"
     },
    "outside": {
      "trunk": "jack"
    }
  }
};

var gloveBoxContents = myStorage.car.inside["glove box"]; // Change this line
// Setup
var testObj = {
  "an entree": "hamburger",
  "my side": "veggies",
  "the drink": "water"
};

// Only change code below this line

var entreeValue = testObj["an entree"];   // Change this line
var drinkValue = testObj["the drink"];    // Change this line
// Setup
var testObj = {
  "hat": "ballcap",
  "shirt": "jersey",
  "shoes": "cleats"
};

// Only change code below this line

var hatValue = testObj.hat;      // Change this line
var shirtValue = testObj.shirt;    // Change this line
// Setup
var testObj = {
  12: "Namath",
  16: "Montana",
  19: "Unitas"
};

// Only change code below this line

var playerNumber = 16;       // Change this line
var player = testObj[playerNumber];   // Change this line
// Setup
var myDog = {
  "name": "Happy Coder",
  "legs": 4,
  "tails": 1,
  "friends": ["freeCodeCamp Campers"]
};

// Only change code below this line
myDog.bark = "woof";var sum = 10 + 10;
function switchOfStuff(val) {
  var answer = "";
  // Only change code below this line
  switch (val) {
    case "a": 
    answer = "apple";
    break;
    case "b": 
    answer = "bird";
    break;
    case "c": 
    answer = "cat";
    break;
    default:
    answer = "stuff";
  }


  // Only change code above this line
  return answer;
}

switchOfStuff(1);
// Change code below this line

var someAdjective = "awesome.";
var myStr = "Learning to code is ";
myStr += someAdjective;// Setup
var a;
a = 7;
var b;

// Only change code below this line
b = a;// Setup
var processed = 0;

function processArg(num) {
  return (num + 3) / 5;
}

// Only change code below this line
processed = processArg(7);var myDog = {
// Only change code below this line
name: "Caramel",
tails: 1,
legs: 4,
friends: ["Charlie","Micky"]

// Only change code above this line
};
function testSize(num) {
  // Only change code below this line
  if (num<5){
     return "Tiny";

  } else if (num<10){
    return "Small";

  } else if (num<15){
      return "Medium";

  }else if (num<20){
      return "Large";

  }else {
      return "Huge";

  }
 

  // Only change code above this line
}

testSize(7);
// This is the single in-line comment.
/* This is the multiple line comment */
// Setup
function testEqual(val) {
  if (val == 12) { // Change this line
    return "Equal";
  }
  return "Not Equal";
}

testEqual(10);
function testGreaterThan(val) {
  if (val > 100) {  // Change this line
    return "Over 100";
  }

  if (val > 10) {  // Change this line
    return "Over 10";
  }

  return "10 or Under";
}

testGreaterThan(10);
function testGreaterOrEqual(val) {
  if (val >= 20) {  // Change this line
    return "20 or Over";
  }

  if (val >= 10) {  // Change this line
    return "10 or Over";
  }

  return "Less than 10";
}

testGreaterOrEqual(10);
// Setup
function testNotEqual(val) {
  if (val != 99) { // Change this line
    return "Not Equal";
  }
  return "Equal";
}

testNotEqual(10);
function testLessThan(val) {
  if (val < 25) {  // Change this line
    return "Under 25";
  }

  if (val < 55) {  // Change this line
    return "Under 55";
  }

  return "55 or Over";
}

testLessThan(10);
function testLessOrEqual(val) {
  if (val <= 12) {  // Change this line
    return "Smaller Than or Equal to 12";
  }

  if (val <= 24) {  // Change this line
    return "Smaller Than or Equal to 24";
  }

  return "More Than 24";
}

testLessOrEqual(10);
// Setup
function testStrict(val) {
  if (val === 7) { // Change this line
    return "Equal";
  }
  return "Not Equal";
}

testStrict(10);
// Setup
function testStrictNotEqual(val) {
  if (val !== 17) { // Change this line
    return "Not Equal";
  }
  return "Equal";
}

testStrictNotEqual(10);
function testLogicalAnd(val) {
  // Only change code below this line

  if (val <= 50  && val >= 25 ) {

      return "Yes";
    
  }

  // Only change code above this line
  return "No";
}

testLogicalAnd(10);
function testLogicalOr(val) {
  // Only change code below this line

  if (val < 10|| val >20 ) {
    return "Outside";
  }

  // Only change code above this line
  return "Inside";
}

testLogicalOr(15);
var a = 3;
var b = 17;
var c = 12;

// Only change code below this line
a += 12;
b += 9;
c += 7;
var a = 48;
var b = 108;
var c = 33;

// Only change code below this line
a /=  12;
b /=  4;
c /=  11;
var a = 5;
var b = 12;
var c = 4.6;

// Only change code below this line
a *= 5;
b *= 3;
c *= 10;
var a = 11;
var b = 9;
var c = 3;

// Only change code below this line
a -= 6;
b -= 15;
c -= 1;
var myStr = "This is the start. " + "This is the end."; // Change this line
// Only change code below this line

var myStr = "This is the first sentence. ";
myStr += "This is the second sentence."
// Only change code below this line
var myName = "James";
var myStr = "My name is " + myName + " and I am well!" ;
// Setup
var myArray = [];

// Only change code below this line
for(var i = 9; i >= 1; i-=2){
    myArray.push(i);
}var count = 0;

function cc(card) {
  // Only change code below this line
  var action = "Hold";
  switch (card) {
    case 2:case 3:case 4:case 5:case 6:
      count += 1;
      break;
    case 7:case 8:case 9:
      count += 0;
      break;
    case 10:case 'J':case 'K':case 'A':case 'Q':
      count -= 1;
      break;
  }

  if (count > 0){
    action = "Bet";
  } 

  return `${count} ${action}`;
  // Only change code above this line
}

cc(2); cc(3); cc(7); cc('K'); cc('A');
var ourDecimal = 5.7;

// Only change code below this line
var myDecimal = 1.4;var myName;var myFirstName = "James";
var myLastName = "Lees";var myVar = 11;

// Only change code below this line
--myVar;
// Setup
var myDog = {
  "name": "Happy Coder",
  "legs": 4,
  "tails": 1,
  "friends": ["freeCodeCamp Campers"],
  "bark": "woof"
};

// Only change code below this line
delete myDog.tails;var quotient = 4.4 / 2.0; // Change this line
var quotient = 66 / 33;
var myStr = "FirstLine\n\t\\SecondLine\nThirdLine"; // Change this line
var myStr = "I am a \"double quoted\" string inside \"double quotes\"."; // Change this line
// Setup
var lastNameLength = 0;
var lastName = "Lovelace";

// Only change code below this line

lastNameLength = lastName.length;
// Only change code below this line

var remainder = 11%3;
function randomFraction() {

  // Only change code below this line

  return Math.random();

  // Only change code above this line
}
function randomWholeNum() {

  // Only change code below this line

  return Math.floor(Math.random() * 10);
}
/*
Create a function called randomRange that takes a range myMin and myMax and returns a random whole number that's greater than or equal to myMin, and is less than or equal to myMax, inclusive.
*/
function randomRange(myMin, myMax) {
  // Only change code below this line

  return Math.floor(Math.random() * (myMax - myMin + 1)) + myMin;
  // Only change code above this line
}
// Declare the myGlobal variable below this line
var myGlobal = 10;

function fun1() {
  // Assign 5 to oopsGlobal Here
  oopsGlobal = 5;
}

// Only change code above this line

function fun2() {
  var output = "";
  if (typeof myGlobal != "undefined") {
    output += "myGlobal: " + myGlobal;
  }
  if (typeof oopsGlobal != "undefined") {
    output += " oopsGlobal: " + oopsGlobal;
  }
  console.log(output);
}
// Setup
var outerWear = "T-Shirt";

function myOutfit() {
  // Only change code below this line
  var outerWear = "sweater";


  // Only change code above this line
  return outerWear;
}

myOutfit();
var names = ["Hole-in-one!", "Eagle", "Birdie", "Par", "Bogey", "Double Bogey", "Go Home!"];
function golfScore(par, strokes) {
  // Only change code below this line
    if (strokes == 1){
     return "Hole-in-one!";

  } else if (strokes <= par-2){
    return "Eagle";

  } else if (strokes == par - 1){
      return "Birdie";

  }else if (strokes == par){
      return "Par";

  }else if (strokes == par + 1){
      return "Bogey";
  } else if (strokes == par + 2){
      return "Double Bogey";
  } else if (strokes >= par + 3) {
      return "Go Home!";
  }
  // Only change code above this line
}

golfScore(5, 4);
var myVar = 87;

// Only change code below this line
++myVar;
var a = 9;function testElseIf(val) {
  if (val > 10) {
    return "Greater than 10";
  } else if (val < 5) {
    return "Smaller than 5";
  } else {
    return "Between 5 and 10";
  }

  
}

testElseIf(7);
function testElse(val) {
  var result = "";
  // Only change code below this line

  if (val > 5) {
    result = "Bigger than 5";
} else {
    result = "5 or Smaller";
  }

  // Only change code above this line
  return result;
}

testElse(4);
// Setup
var myArray = [];

// Only change code below this line
for (var i = 1; i <= 9; i++){
    if (i%2 != 0){
        myArray.push(i);
    }
}// Setup
var myArr = [ 2, 3, 4, 5, 6];

// Only change code below this line
var total = 0; 
for(var i = 0; i < myArr.length; i++){
    total += myArr[i];
 
}// Setup
var myArray = [];
var i = 10;

// Only change code below this line
do {
  myArray.push(i);
  i++;
} while (i < 5);
// Setup
var myArray = [];

// Only change code below this line
for (var i = 1; i <= 5; i++){
    myArray.push(i);
}// Setup
var myArray = [];

// Only change code below this line
var i =  5;
while(i >= 0){
    myArray.push(i);
    i--;
}function myLocalScope() {

  // Only change code below this line
  var myVar ;
  console.log('inside myLocalScope', myVar);

}
myLocalScope();

// Run and check the console
// myVar is not defined outside of myLocalScope
console.log('outside myLocalScope', myVar);
function orderMyLogic(val) {
  if (val < 5) {
    return "Less than 5";
  } else if (val < 10) {
    return "Less than 10";
  } else {
    return "Greater than or equal to 10";
  }
}

orderMyLogic(7);
// Setup
var myArray = [["John", 23], ["cat", 2]];

// Only change code below this line
var removedFromMyArray = myArray.pop();
// Setup
var myArray = [["John", 23], ["cat", 2]];

// Only change code below this line
myArray.push(["dog",3]);// Setup
var myArray = [["John", 23], ["dog", 3]];

// Only change code below this line
var removedFromMyArray = myArray.shift();
// Setup
var myArray = [["John", 23], ["dog", 3]];
myArray.shift();

// Only change code below this line
myArray.unshift(["Paul",35]);var myMusic = [
  {
    "artist": "Billy Joel",
    "title": "Piano Man",
    "release_year": 1973,
    "formats": [
      "CD",
      "8T",
      "LP"
    ],
    "gold": true
  },
  // Add a record here
  {
    "artist": "Megan stallion",
    "title": "Body",
    "release_year": 2020,
    "formats": [
      "CD",
      "8T",
      "LP"
    ],
    "gold": true
  }
];
// Setup
var myArray = [18,64,99];

// Only change code below this line
myArray[0] = 45;function sequentialSizes(val) {
  var answer = "";
  // Only change code below this line
  switch (val){
    case 1:case 2:case 3: 
    answer = "Low";
    break;
    case 4:case 5:case 6: 
    answer = "Mid";
    break;
    case 7:case 8:case 9: 
    answer = "High";
    break;
    
    
  }


  // Only change code above this line
  return answer;
}

sequentialSizes(1);
var product = 2.0 * (5.0/2.0);
var product = 8 * 10;
// Only change code below this line
var myArray = [

    ["Apple",10]

];
function multiplyAll(arr) {
  var product = 1;
  // Only change code below this line
  for (var i=0; i < arr.length; i++) {
    for (var j=0; j < arr[i].length; j++) {
      product *= arr[i][j];
    }
  }
  // Only change code above this line
  return product;
}

multiplyAll([[1,2],[3,4],[5,6,7]]);
function functionWithArgs(first, second){
   console.log(first + second); 
}

functionWithArgs(1,2);
functionWithArgs(7,9);// Setup
function compareEquality(a, b) {
  if (a === b) { // Change this line
    return "Equal";
  }
  return "Not Equal";
}

compareEquality(10, "10");
// Setup
var contacts = [
    {
        "firstName": "Akira",
        "lastName": "Laine",
        "number": "0543236543",
        "likes": ["Pizza", "Coding", "Brownie Points"]
    },
    {
        "firstName": "Harry",
        "lastName": "Potter",
        "number": "0994372684",
        "likes": ["Hogwarts", "Magic", "Hagrid"]
    },
    {
        "firstName": "Sherlock",
        "lastName": "Holmes",
        "number": "0487345643",
        "likes": ["Intriguing Cases", "Violin"]
    },
    {
        "firstName": "Kristian",
        "lastName": "Vos",
        "number": "unknown",
        "likes": ["JavaScript", "Gaming", "Foxes"]
    }
];


function lookUpProfile(name, prop){

// Only change code below this line

var result = "", resultIndex = 0;
var propStatus = false;
var firstNameStatus = "";
for (var i = 0; i < contacts.length; i++) {
    propStatus = contacts[i].hasOwnProperty(prop) ;
    firstNameStatus = contacts[i].firstName;
    if (name == firstNameStatus) {
        resultIndex = i;
        i = contacts.length;
    } 

}

if (firstNameStatus != name){
    result = "No such contact";
} else if (propStatus == false){
    result = "No such property";
} else {
    result = contacts[resultIndex][prop];
}
console.log(result);
return result;
// Only change code above this line
}

lookUpProfile("Akira", "address");
//lookUpProfile("Kristian", "lastName");
var myStr = '<a href="http://www.example.com" target="_blank">Link</a>';
// Setup
var collection = {
  2548: {
    albumTitle: 'Slippery When Wet',
    artist: 'Bon Jovi',
    tracks: ['Let It Rock', 'You Give Love a Bad Name']
  },
  2468: {
    albumTitle: '1999',
    artist: 'Prince',
    tracks: ['1999', 'Little Red Corvette']
  },
  1245: {
    artist: 'Robert Palmer',
    tracks: []
  },
  5439: {
    albumTitle: 'ABBA Gold'
  }
};

// Only change code below this line
function updateRecords(object, id, prop, value) {
  // prop is artist
  // value is artist value
  //id is number
  

  if (prop !== "tracks"  && value.length > 0 ){
      object[id][prop] = value;
  }

  if (prop === "tracks" && object[id].hasOwnProperty(prop) == false){
      object[id].tracks = [];
      object[id].tracks.push(value);
  }

  if (prop === "tracks" && value.length > 0){
      object[id].tracks.push(value);
  }

  if (value.length == 0){
    delete object[id][prop];
  }


  return object;
}

//updateRecords(collection, 5439, 'artist', 'ABBA');
updateRecords(collection, 5439, "tracks", "Take a Chance on Me");function sum(arr, n) {
  // Only change code below this line
    if (n <= 0) {
      return 0;
    } else {
      return sum(arr, n-1) + arr[n - 1];
    }
  // Only change code above this line
}
function chainToSwitch(val) {
  var answer = "";
  // Only change code below this line

switch (val){
  case "bob":
    answer = "Marley";
  break;
  case 42:
    answer = "The Answer";
  break;
  case 1:
    answer = "There is no #1";
    break;
  case 99:
    answer = "Missed me by this much!";
    break;
  case 7:
    answer = "Ate Nine";
    break;
    default:
    answer = "";
  }

  // Only change code above this line
  return answer;
}

chainToSwitch(7);
function timesFive(num) {
    return num * 5;
}// Setup
function abTest(a, b) {
  // Only change code below this line

  if ( a < 0 || b < 0 ) {
    return;
  }

  // Only change code above this line

  return Math.round(Math.pow(Math.sqrt(a) + Math.sqrt(b), 2));
}

abTest(2,2);
function isLess(a, b) {
  // Only change code below this line
  return a < b;
  
  // Only change code above this line

}

isLess(10, 15);
function caseInSwitch(val) {
  var answer = "";
  // Only change code below this line
  switch (val) {
    case 1: 
    answer = "alpha";
    break;
    case 2: 
    answer = "beta";
    break;
    case 3: 
    answer = "gamma";
    break;
    case 4: 
    answer = "delta";
    break;
  }


  // Only change code above this line
  return answer;
}

caseInSwitch(1);
var myList = [

    ["Cake", 2],
    ["Peach", 3],
    ["Pine Apple", 10],
    ["Apple", 4],
    ["Orange", 5]
];
function nextInLine(arr, item) {
   // Only change code below this line
    arr.push(item);
    item = arr.shift();
  return item;
  // Only change code above this line
  

}

// Setup
var testArr = [1,2,3,4,5];

// Display code
console.log("Before: " + JSON.stringify(testArr));
console.log(nextInLine(testArr, 6));
console.log("After: " + JSON.stringify(testArr));
// Only change code below this line
var myArray = ["Apple", 10];
// Setup
var a;

// Only change code below this line
a = 7;var difference = 45 - 33;
function checkObj(obj, checkProp) {
  // Only change code below this line
  var result = "Not Found";
  if (obj.hasOwnProperty(checkProp)){
    result = obj[checkProp];
  }

  return result;
  // Only change code above this line
}
// Setup
var myStr = "Jello World";

// Only change code below this line
myStr = "Hello World"; // Change this line
// Only change code above this line
function welcomeToBooleans() {

  // Only change code below this line

  return true; // Change this line

  // Only change code above this line
}
// Variable declarations
var studlyCapVar;
var properCamelCase;
var titleCaseOver;

// Variable assignments
studlyCapVar = 10;
properCamelCase = "A String";
titleCaseOver = 9000;
// Setup
var sum = 0;

function addThree() {
  sum = sum + 3;
}

// Only change code below this line
  function addFive() {
    sum += 5;
  }

// Only change code above this line

addThree();
addFive();
// Only change code below this line
var a = 5;
var b = 10;
var c = "I am a";
// Only change code above this line

a = a + 1;
b = b + 5;
c = c + " String!";
// Setup
var myDog = {
  "name": "Coder",
  "legs": 4,
  "tails": 1,
  "friends": ["freeCodeCamp Campers"]
};

// Only change code below this line
myDog.name = "Happy Coder";// Setup
var firstLetterOfLastName = "";
var lastName = "Lovelace";

// Only change code below this line
firstLetterOfLastName = lastName[0]; // Change this line
// Setup
var lastName = "Lovelace";

// Only change code below this line
var lastLetterOfLastName = lastName[lastName.length - 1]; // Change this line
// Setup
var lastName = "Lovelace";

// Only change code below this line
var thirdLetterOfLastName = lastName[2]; // Change this line
// Setup
var lastName = "Lovelace";

// Only change code below this line
var secondToLastLetterOfLastName = lastName[lastName.length-2]; // Change this line
function trueOrFalse(wasThatTrue) {
  // Only change code below this line
  if(wasThatTrue == true){
    return "Yes, that was true";
  }
  return "No, that was false";


  // Only change code above this line

}
/*
In the checkSign function, use multiple conditional operators - following the recommended format used in findGreaterOrEqual - to check if a number is positive, negative or zero. The function should return "positive", "negative" or "zero". */

function checkSign(num) {
    return (num > 0) ? "positive" : (num < 0) ? "negative" : "zero";
}

checkSign(10);
/*


We have defined a function called countdown with one parameter (n). The function should use recursion to return an array containing the integers n through 1 based on the n parameter. If the function is called with a number less than 1, the function should return an empty array. For example, calling this function with n = 5 should return the array [5, 4, 3, 2, 1]. Your function must use recursion by calling itself and must not use loops of any kind. */

// Only change code below this line

function countdown(n){
  if (n < 1) {
    return [];
  } else {
    const countArray = countdown(n - 1);
  
     countArray.unshift(n);
    return countArray;
  }
}
console.log(countdown(5));
// Only change code above this line
function rangeOfNumbers(startNum, endNum) {
  if (endNum < startNum) {
    return [];
  } else {
    const countArray = rangeOfNumbers(startNum, endNum - 1);
    countArray.push(endNum);
    return countArray;
  }
};
console.log(rangeOfNumbers(1,5));
/*Use the conditional operator in the checkEqual function to check if two numbers are equal or not. The function should return either "Equal" or "Not Equal".*/
function checkEqual(a, b) {
return a == b ? "Equal" : "Not Equal"
}

checkEqual(1, 2);
/*Use parseInt() in the convertToInteger function so it converts a binary number to an integer and returns it. */
function convertToInteger(str) {
    // parseInt(str, radix);
return parseInt(str, 2);
}

convertToInteger("10011");
function convertToInteger(str) {
return parseInt(str);
}

convertToInteger("56");
// Setup
function phoneticLookup(val) {
  var result = "";

  // Only change code below this line
  var lookup =  {
     "alpha": "Adams",
     "bravo": "Boston",
     "charlie": "Chicago",
     "delta": "Denver",
     "echo": "Easy",
     "foxtrot": "Frank",
     "":undefined
  };

  result = lookup[val];

  // Only change code above this line
  return result;
}

phoneticLookup("charlie");
var myNoun = "dog";
var myAdjective = "big";
var myVerb = "ran";
var myAdverb = "quickly";

// Only change code below this line
var wordBlanks = myAdjective + " " + myNoun + " " + myVerb + " " + myAdverb; // Change this line
// Only change code above this line
function reusableFunction() { 
    console.log("Hi World");
}

reusableFunction();