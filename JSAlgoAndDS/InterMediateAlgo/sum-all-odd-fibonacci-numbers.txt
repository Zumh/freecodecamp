/*
Intermediate Algorithm Scripting: Sum All Odd Fibonacci Numbers
Given a positive integer num, return the sum of all odd Fibonacci numbers that are less than or equal to num.

The first two numbers in the Fibonacci sequence are 1 and 1. Every additional number in the sequence is the sum of the two previous numbers. The first six numbers of the Fibonacci sequence are 1, 1, 2, 3, 5 and 8.

For example, sumFibs(10) should return 10 because all odd Fibonacci numbers less than or equal to 10 are 1, 1, 3, and 5.
*/
function sumFibs(num) {

// how to generate fib number
//check if num is only one 
if (num == 1){
  return num;
}
var fib = [];
var fibNumb = 1;
var oddNumb = 0;
var sum = 0;
var countIndex = 0;
fib.push(fibNumb);

// collect the fibNumb with odd number
while(oddNumb<= num){
  
   fib.push(fibNumb);
   
  fibNumb += fib[countIndex];
  if(fib[countIndex] % 2 != 0){
    // this number is odd
    oddNumb = fib[countIndex];
    if (oddNumb<=num){
      sum += oddNumb
    }
  } 
  countIndex++;
}


  return sum;
}
console.log(sumFibs(10))
console.log(sumFibs(4));